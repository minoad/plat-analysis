[build-system]
requires = ["setuptools >= 61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "documentanalysis"
version = "0.1.0"
description = "Given a file, do all you can to extract text and then store it."
requires-python = ">=3.12"
license = { file = "LICENSE.txt" }
keywords = ["plat", "ocr", "template", "devcontainer"]
authors = [{ name = "Micah Norman", email = "minoad@gmail.com" }]
maintainers = [{ name = "Micah Norman", email = "minoad@gmail.com" }]
dependencies = [
  "httpx",
  "pathlib",
  "click",
  "boto3",
  "pytesseract",
  "pdf2image",
  "python-poppler",
  "pypdf",
  "isort",
  "black",
  "mypy",
  "pylint",
  "flake8",
  "pytest",
  "pytest-mock",
  "zope-interface",
  "coverage",
  "opencv-python",
  "numpy",
  "matplotlib",
  "pymongo"
]

[project.optional-dependencies]
dev = [
  "pylint",
  "toml",
  "yapf",
  "colorama",
  "isort",
  "black",
  "mypy",
  "mypy-extensions",
]
test = ["pytest < 5.0.0", "pytest-cov[all]"]
all = ["devcont[test, dev]"]

[project.urls]
homepage = "https://example.com"
documentation = "https://readthedocs.org"
repository = "https://github.com/minoad/plat-analysis"
changelog = "https://github.com/minoad/plat-analysis/CHANGELOG.md"

[tool.mypy]
warn_unreachable = true
show_error_codes = true
show_column_numbers = true

[tool.pytest.ini_options]
# Option below requires `tests/optional.py`
addopts = "--strict-config --strict-markers"

[tool.isort]
profile = "black"

[tool.black]
line-length = 120
target-version = ['py312']
include = '\.pyi?$'
preview = true

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.'MESSAGES CONTROL']
max-line-length = 120

[project.scripts]
testo = "testo.__main__:main"

#[project.gui-scripts]
#spam-gui = "testo.printo:main"

#[project.entry-points."spam.magical"]
#tomatoes = "spam:main_tomatoes"
